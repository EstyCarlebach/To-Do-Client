{"ast":null,"code":"import axios from 'axios';\nimport swal from 'sweetalert';\nimport Service from './Service';\nimport { useState } from 'react';\n\n//דפולטיבית API הגדרת כתובת \naxios.defaults.baseURL = \"http://localhost:5162/\";\n//תפיסת שגיאות\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  swal(`${error.name}`, `${error.message}`, \"error\");\n  console.log(+\": \" + error.message);\n});\n\n//API בקשות \nexport default {\n  getTasks: async () => {\n    const result = await axios.get();\n    return result.data;\n  },\n  getTUsers: async () => {\n    const result = await axios.get('users');\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = axios.post(`?name=${name}`);\n    return await result.data;\n  },\n  //-----------------------הוספת משתמש------------------\n  addUser: async (Id, Name, Password) => {\n    const res = await axios.post(`addUser`, {\n      Id,\n      Name,\n      Password\n    });\n    if (res.data != null) Service.saveToken(res.data);else swal(\"אתה  רשום אצלינו\", \"הכנס להתחברות\", \"error\");\n    return res;\n  },\n  login: async (Id, Name, Password) => {\n    const res = await axios.post(\"login\", {\n      Id,\n      Name,\n      Password\n    });\n    if (res.data != null) Service.saveToken(res.data.jwt);else swal(\"אתה לא רשום אצלינו\", \"הכנס להרשמה\", \" info\");\n    return res;\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    const result = axios.put(`?id=${id}`);\n    return (await result).data;\n  },\n  deleteTask: async id => {\n    const result = axios.delete(`?id=${id}`);\n    return (await result).data;\n  }\n};","map":{"version":3,"names":["axios","swal","Service","useState","defaults","baseURL","interceptors","response","use","error","name","message","console","log","getTasks","result","get","data","getTUsers","addTask","post","addUser","Id","Name","Password","res","saveToken","login","jwt","setCompleted","id","isComplete","put","deleteTask","delete"],"sources":["C:/Users/This User/Documents/מסלול/שנה ב/פרויקטים/פרקטי קוד/בסיעתא דשמיא פרויקט 3/Client/ToDoListReact/src/service1.js"],"sourcesContent":["import axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport Service from './Service';\r\nimport { useState } from 'react';\r\n\r\n//דפולטיבית API הגדרת כתובת \r\naxios.defaults.baseURL = \"http://localhost:5162/\"\r\n//תפיסת שגיאות\r\naxios.interceptors.response.use(function (response) {\r\n  return response;\r\n}, function (error) {\r\n  swal(`${error.name}`, `${error.message}`, \"error\")\r\n  console.log(+ \": \" + error.message);\r\n});\r\n\r\n//API בקשות \r\nexport default {\r\n\r\n  getTasks: async () => {\r\n    const result = await axios.get()\r\n\r\n    return result.data;\r\n  }\r\n  ,\r\n  getTUsers: async () => {\r\n    const result = await axios.get('users');\r\n    return result.data;\r\n  },\r\n  addTask: async (name) => {\r\n    console.log('addTask', name)\r\n    const result = axios.post(`?name=${name}`)\r\n\r\n    return await result.data;\r\n  }\r\n\r\n  ,\r\n  //-----------------------הוספת משתמש------------------\r\n  addUser: async (Id, Name, Password) => {\r\n    const res =await axios.post(`addUser`, {Id, Name, Password})\r\n    if (res.data != null)\r\n      Service.saveToken(res.data);\r\n    else\r\n      swal(\"אתה  רשום אצלינו\", \"הכנס להתחברות\", \"error\")\r\n    return res;  },\r\n  login: async (Id, Name, Password) => {\r\n    const res = await axios.post(\"login\", { Id, Name, Password });\r\n    if (res.data != null)\r\n      Service.saveToken(res.data.jwt);\r\n    else\r\n      swal(\"אתה לא רשום אצלינו\", \"הכנס להרשמה\", \" info\")\r\n    return res;\r\n  }\r\n  , setCompleted: async (id, isComplete) => {\r\n    console.log('setCompleted', { id, isComplete })\r\n    const result = axios.put(`?id=${id}`)\r\n    return (await result).data;\r\n  },\r\n\r\n  deleteTask: async (id) => {\r\n    const result = axios.delete(`?id=${id}`)\r\n\r\n    return (await result).data;\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AACAH,KAAK,CAACI,QAAQ,CAACC,OAAO,GAAG,wBAAwB;AACjD;AACAL,KAAK,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAUD,QAAQ,EAAE;EAClD,OAAOA,QAAQ;AACjB,CAAC,EAAE,UAAUE,KAAK,EAAE;EAClBR,IAAI,CAAC,GAAGQ,KAAK,CAACC,IAAI,EAAE,EAAE,GAAGD,KAAK,CAACE,OAAO,EAAE,EAAE,OAAO,CAAC;EAClDC,OAAO,CAACC,GAAG,CAAC,CAAE,IAAI,GAAGJ,KAAK,CAACE,OAAO,CAAC;AACrC,CAAC,CAAC;;AAEF;AACA,eAAe;EAEbG,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,CAAC;IAEhC,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,MAAMH,MAAM,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,OAAO,CAAC;IACvC,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EACDE,OAAO,EAAE,MAAOT,IAAI,IAAK;IACvBE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,IAAI,CAAC;IAC5B,MAAMK,MAAM,GAAGf,KAAK,CAACoB,IAAI,CAAC,SAASV,IAAI,EAAE,CAAC;IAE1C,OAAO,MAAMK,MAAM,CAACE,IAAI;EAC1B,CAAC;EAGD;EACAI,OAAO,EAAE,MAAAA,CAAOC,EAAE,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IACrC,MAAMC,GAAG,GAAE,MAAMzB,KAAK,CAACoB,IAAI,CAAC,SAAS,EAAE;MAACE,EAAE;MAAEC,IAAI;MAAEC;IAAQ,CAAC,CAAC;IAC5D,IAAIC,GAAG,CAACR,IAAI,IAAI,IAAI,EAClBf,OAAO,CAACwB,SAAS,CAACD,GAAG,CAACR,IAAI,CAAC,CAAC,KAE5BhB,IAAI,CAAC,kBAAkB,EAAE,eAAe,EAAE,OAAO,CAAC;IACpD,OAAOwB,GAAG;EAAG,CAAC;EAChBE,KAAK,EAAE,MAAAA,CAAOL,EAAE,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IACnC,MAAMC,GAAG,GAAG,MAAMzB,KAAK,CAACoB,IAAI,CAAC,OAAO,EAAE;MAAEE,EAAE;MAAEC,IAAI;MAAEC;IAAS,CAAC,CAAC;IAC7D,IAAIC,GAAG,CAACR,IAAI,IAAI,IAAI,EAClBf,OAAO,CAACwB,SAAS,CAACD,GAAG,CAACR,IAAI,CAACW,GAAG,CAAC,CAAC,KAEhC3B,IAAI,CAAC,oBAAoB,EAAE,aAAa,EAAE,OAAO,CAAC;IACpD,OAAOwB,GAAG;EACZ,CAAC;EACCI,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACxCnB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAAEiB,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,MAAMhB,MAAM,GAAGf,KAAK,CAACgC,GAAG,CAAC,OAAOF,EAAE,EAAE,CAAC;IACrC,OAAO,CAAC,MAAMf,MAAM,EAAEE,IAAI;EAC5B,CAAC;EAEDgB,UAAU,EAAE,MAAOH,EAAE,IAAK;IACxB,MAAMf,MAAM,GAAGf,KAAK,CAACkC,MAAM,CAAC,OAAOJ,EAAE,EAAE,CAAC;IAExC,OAAO,CAAC,MAAMf,MAAM,EAAEE,IAAI;EAC5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}